global
    log /dev/log local0 warning
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    user haproxy
    group haproxy
    daemon
    maxconn 20000
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s

defaults
    log global
    option dontlognull
    option clitcpka
    option srvtcpka
    timeout connect 2000
    timeout client  20000
    timeout server  20000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# =============================================================================
# 前端 配置 - HTTPS (443端口)
# =============================================================================
frontend tcp_front_443
    bind *:443
    mode tcp
    option tcplog
    rate-limit sessions 2500
    
    # SSL SNI 检查配置
    tcp-request inspect-delay 5s
    tcp-request content accept if { req_ssl_hello_type 1 }
    
    # Nginx 后端域名配置
    use_backend nginx_servers_443 if { req_ssl_sni -i www.example1.com }
    #use_backend nginx_servers_443 if { req_ssl_sni -i www.example2.com }
    #use_backend nginx_servers_443 if { req_ssl_sni -i www.example3.com }
    
    # Caddy 后端域名配置
    use_backend caddy_servers_443 if { req_ssl_sni -i www.example4.com }
    #use_backend caddy_servers_443 if { req_ssl_sni -i www.example5.com }
    #use_backend caddy_servers_443 if { req_ssl_sni -i www.example6.com }
 
    
    # 默认后端（处理无法匹配的域名，如直接IP访问等）
    default_backend nginx_servers_443

# =============================================================================
# 前端 配置 - HTTP (80端口)
# =============================================================================
frontend http_front_80
    bind *:80
    mode http
    option httplog
    
    # Nginx 后端域名配置
    use_backend nginx_servers_80 if { hdr(host) -i www.example1.com }
    #use_backend nginx_servers_80 if { hdr(host) -i www.example2.com }
    #use_backend nginx_servers_80 if { hdr(host) -i www.example3.com }
    
    # Caddy 后端域名配置
    use_backend caddy_servers_80 if { hdr(host) -i www.example4.com }
    #use_backend caddy_servers_80 if { hdr(host) -i www.example5.com }
    #use_backend caddy_servers_80 if { hdr(host) -i www.example6.com }
    
    
    # 默认后端
    default_backend nginx_servers_80

# =============================================================================
# 后端 配置 - Nginx 服务器
# =============================================================================
backend nginx_servers_443
    mode tcp    
    # 主 Nginx 服务器
    server nginx1_443 6.6.6.6:443 check inter 10s rise 2 fall 3 send-proxy
    
    # 备用 Nginx 服务器（可选）
    # server nginx2_443 8.8.8.8:443 check inter 10s rise 2 fall 3 send-proxy backup
    
    # 如果后端不支持 send-proxy，请移除该参数

backend nginx_servers_80
    mode http
    # 主 Nginx 服务器
    server nginx1_80 6.6.6.6:80 check inter 10s rise 2 fall 3
    
    # 备用 Nginx 服务器（可选）
    # server nginx2_80 8.8.8.8:80 check inter 10s rise 2 fall 3 backup

# =============================================================================
# 后端 配置 - Caddy 服务器
# =============================================================================
backend caddy_servers_443
    mode tcp
    # 主 Caddy 服务器
    server caddy1_443 7.7.7.7:443 check inter 10s rise 2 fall 3
    
    # 备用 Caddy 服务器（可选）
    # server caddy2_443 9.9.9.9:443 check inter 10s rise 2 fall 3 backup
    
    # 如果 Caddy 不支持 send-proxy，请移除该参数

backend caddy_servers_80
    mode http
    # 主 Caddy 服务器
    server caddy1_80 7.7.7.7:80 check inter 10s rise 2 fall 3
    
    # 备用 Caddy 服务器（可选）
    # server caddy2_80 9.9.9.9:80 check inter 10s rise 2 fall 3 backup

# =============================================================================
# 统计页面（可选）
# =============================================================================
listen stats
    bind *:8404
    mode http
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE
    # 建议设置认证
    #stats auth admin:your_password_here

# =============================================================================
# 配置说明：
# 
# 1. 域名配置：
#    - 将 example1.com, example2.com 等替换为你的实际域名
#    - Nginx 后端：example1.com, example2.com, blog.example1.com
#    - Caddy 后端：example3.com, example4.com, api.example3.com
#
# 2. 服务器 IP 配置：
#    - 将 6.6.6.6 替换为你的 Nginx 服务器 IP
#    - 将 7.7.7.7 替换为你的 Caddy 服务器 IP
#
# 3. send-proxy 参数：
#    - 如果后端服务器不支持 PROXY 协议，请移除 send-proxy 参数
#    - Nginx 需要配置 proxy_protocol 支持
#    - Caddy 需要配置相应的代理协议支持
#
# 4. 备用服务器：
#    - 取消注释 backup 服务器行来添加备用服务器
#    - 备用服务器只在主服务器全部故障时启用
#
# 5. 统计页面：
#    - 访问 http://your_server:8404/stats 查看状态
#    - 建议在生产环境中启用认证
# =============================================================================

