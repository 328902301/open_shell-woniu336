global
    log /dev/log local0 warning
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    user haproxy
    group haproxy
    daemon
    maxconn 20000
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s

defaults
    log global
    option dontlognull
    option clitcpka
    option srvtcpka
    timeout connect 5s
    timeout client  30s
    timeout server  30s
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

# =============================================================================
# 前端配置 - HTTP (80端口) - 简化为强制重定向HTTPS
# =============================================================================
frontend http-in
    bind *:80
    mode http
    option httplog
    option http-keep-alive      
    timeout http-keep-alive 15s
    # 所有HTTP流量强制跳转HTTPS
    redirect scheme https code 301

# =============================================================================
# 前端配置 - HTTPS (443端口) - 保留原有功能
# =============================================================================
frontend tcp_front_443
    bind *:443
    mode tcp
    option tcplog
    rate-limit sessions 8000
    
    # SSL SNI 检查配置
    tcp-request inspect-delay 5s
    tcp-request content accept if { req_ssl_hello_type 1 }
    
    # Nginx 后端域名配置
    use_backend nginx_servers_443 if { req_ssl_sni -i www.1234.com }
    use_backend nginx_servers_443 if { req_ssl_sni -i 1234.com }
    #use_backend nginx_servers_443 if { req_ssl_sni -i www.example2.com }
    #use_backend nginx_servers_443 if { req_ssl_sni -i www.example3.com }
    
    # Caddy 后端域名配置
    use_backend caddy_servers_443 if { req_ssl_sni -i www.2345.com }
    use_backend caddy_servers_443 if { req_ssl_sni -i 2345.com }
    #use_backend caddy_servers_443 if { req_ssl_sni -i www.example5.com }
    #use_backend caddy_servers_443 if { req_ssl_sni -i www.example6.com }
    
    # 默认后端（处理无法匹配的域名，如直接IP访问等）
    default_backend nginx_servers_443

# =============================================================================
# 后端配置 - Nginx 服务器 (仅443端口)
# =============================================================================
backend nginx_servers_443
    mode tcp    
    # 主 Nginx 服务器
    server nginx1_443 6.6.6.6:443 check inter 10s rise 2 fall 3 send-proxy
    
    # 备用 Nginx 服务器（可选）
    # server nginx2_443 8.8.8.8:443 check inter 10s rise 2 fall 3 send-proxy backup
    
    # 如果后端不支持 send-proxy，请移除该参数

# =============================================================================
# 后端配置 - Caddy 服务器 (仅443端口)
# =============================================================================
backend caddy_servers_443
    mode tcp
    # 主 Caddy 服务器
    server caddy1_443 9.9.9.9:443 check inter 10s rise 2 fall 3
    
    # 备用 Caddy 服务器（可选）
    # server caddy2_443 9.9.9.9:443 check inter 10s rise 2 fall 3 backup
   
# =============================================================================
# 统计页面（可选）
# =============================================================================
listen stats
    bind *:8404
    mode http
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE
    # 建议设置认证
    #stats auth admin:your_password_here

# =============================================================================
# 使用说明：
# 1. 将域名替换为你的实际域名
# 2. 将IP地址替换为实际的后端服务器IP
# 3. 后端服务器需要配置SSL证书
# 4. 访问 http://服务器IP:8404/stats 查看状态
# ==========================================================================

